// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Control_Alt = require("Control.Alt");
var Control_Extend = require("Control.Extend");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Foldable = require("Data.Foldable");
var Data_Traversable = require("Data.Traversable");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (_295) {
            if (_295 instanceof Left) {
                return "Left (" + (Prelude.show(__dict_Show_2)(_295.value0) + ")");
            };
            if (_295 instanceof Right) {
                return "Right (" + (Prelude.show(__dict_Show_3)(_295.value0) + ")");
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 174, column 1 - line 181, column 1: " + [ _295.constructor.name ]);
        });
    };
};
var functorEither = new Prelude.Functor(function (f) {
    return function (_290) {
        if (_290 instanceof Left) {
            return new Left(_290.value0);
        };
        if (_290 instanceof Right) {
            return new Right(f(_290.value0));
        };
        throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _290.constructor.name ]);
    };
});
var foldableEither = new Data_Foldable.Foldable(function (__dict_Monoid_6) {
    return function (f) {
        return function (_302) {
            if (_302 instanceof Left) {
                return Data_Monoid.mempty(__dict_Monoid_6);
            };
            if (_302 instanceof Right) {
                return f(_302.value0);
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, _302.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_301) {
            if (_301 instanceof Left) {
                return z;
            };
            if (_301 instanceof Right) {
                return f(z)(_301.value0);
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _301.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_300) {
            if (_300 instanceof Left) {
                return z;
            };
            if (_300 instanceof Right) {
                return f(_300.value0)(z);
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _300.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (__dict_Applicative_1) {
    return function (_307) {
        if (_307 instanceof Left) {
            return Prelude.pure(__dict_Applicative_1)(new Left(_307.value0));
        };
        if (_307 instanceof Right) {
            return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(_307.value0);
        };
        throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 217, column 1 - line 223, column 1: " + [ _307.constructor.name ]);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_306) {
            if (_306 instanceof Left) {
                return Prelude.pure(__dict_Applicative_0)(new Left(_306.value0));
            };
            if (_306 instanceof Right) {
                return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(f(_306.value0));
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 217, column 1 - line 223, column 1: " + [ f.constructor.name, _306.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (f) {
    return function (_294) {
        if (_294 instanceof Left) {
            return new Left(_294.value0);
        };
        return new Right(f(_294));
    };
});
var eqEither = function (__dict_Eq_7) {
    return function (__dict_Eq_8) {
        return new Prelude.Eq(function (_296) {
            return function (_297) {
                if (_296 instanceof Left && _297 instanceof Left) {
                    return Prelude["=="](__dict_Eq_7)(_296.value0)(_297.value0);
                };
                if (_296 instanceof Right && _297 instanceof Right) {
                    return Prelude["=="](__dict_Eq_8)(_296.value0)(_297.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (__dict_Ord_4) {
    return function (__dict_Ord_5) {
        return new Prelude.Ord(function () {
            return eqEither(__dict_Ord_4["__superclass_Prelude.Eq_0"]())(__dict_Ord_5["__superclass_Prelude.Eq_0"]());
        }, function (_298) {
            return function (_299) {
                if (_298 instanceof Left && _299 instanceof Left) {
                    return Prelude.compare(__dict_Ord_4)(_298.value0)(_299.value0);
                };
                if (_298 instanceof Right && _299 instanceof Right) {
                    return Prelude.compare(__dict_Ord_5)(_298.value0)(_299.value0);
                };
                if (_298 instanceof Left) {
                    return Prelude.LT.value;
                };
                if (_299 instanceof Left) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 191, column 1 - line 197, column 1: " + [ _298.constructor.name, _299.constructor.name ]);
            };
        });
    };
};
var either = function (f) {
    return function (g) {
        return function (_289) {
            if (_289 instanceof Left) {
                return f(_289.value0);
            };
            if (_289 instanceof Right) {
                return g(_289.value0);
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _289.constructor.name ]);
        };
    };
};
var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
var isRight = either(Prelude["const"](false))(Prelude["const"](true));
var boundedEither = function (__dict_Bounded_9) {
    return function (__dict_Bounded_10) {
        return new Prelude.Bounded(new Left(Prelude.bottom(__dict_Bounded_9)), new Right(Prelude.top(__dict_Bounded_10)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_291) {
            if (_291 instanceof Left) {
                return new Left(f(_291.value0));
            };
            if (_291 instanceof Right) {
                return new Right(g(_291.value0));
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 56, column 1 - line 92, column 1: " + [ f.constructor.name, g.constructor.name, _291.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (__dict_Monoid_13) {
    return function (f) {
        return function (g) {
            return function (_305) {
                if (_305 instanceof Left) {
                    return f(_305.value0);
                };
                if (_305 instanceof Right) {
                    return g(_305.value0);
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, _305.constructor.name ]);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_304) {
                if (_304 instanceof Left) {
                    return f(z)(_304.value0);
                };
                if (_304 instanceof Right) {
                    return g(z)(_304.value0);
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, z.constructor.name, _304.constructor.name ]);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_303) {
                if (_303 instanceof Left) {
                    return f(_303.value0)(z);
                };
                if (_303 instanceof Right) {
                    return g(_303.value0)(z);
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, z.constructor.name, _303.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (__dict_Applicative_12) {
    return function (_309) {
        if (_309 instanceof Left) {
            return Prelude["<$>"]((__dict_Applicative_12["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(_309.value0);
        };
        if (_309 instanceof Right) {
            return Prelude["<$>"]((__dict_Applicative_12["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(_309.value0);
        };
        throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 223, column 1 - line 227, column 36: " + [ _309.constructor.name ]);
    };
}, function (__dict_Applicative_11) {
    return function (f) {
        return function (g) {
            return function (_308) {
                if (_308 instanceof Left) {
                    return Prelude["<$>"]((__dict_Applicative_11["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(f(_308.value0));
                };
                if (_308 instanceof Right) {
                    return Prelude["<$>"]((__dict_Applicative_11["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(g(_308.value0));
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 223, column 1 - line 227, column 36: " + [ f.constructor.name, g.constructor.name, _308.constructor.name ]);
            };
        };
    };
});
var applyEither = new Prelude.Apply(function () {
    return functorEither;
}, function (_292) {
    return function (r) {
        if (_292 instanceof Left) {
            return new Left(_292.value0);
        };
        if (_292 instanceof Right) {
            return Prelude["<$>"](functorEither)(_292.value0)(r);
        };
        throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-either/src/Data/Either.purs line 92, column 1 - line 116, column 1: " + [ _292.constructor.name, r.constructor.name ]);
    };
});
var bindEither = new Prelude.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (_288) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var applicativeEither = new Prelude.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Prelude.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (_293) {
    return function (r) {
        if (_293 instanceof Left) {
            return r;
        };
        return _293;
    };
});
module.exports = {
    Left: Left, 
    Right: Right, 
    isRight: isRight, 
    isLeft: isLeft, 
    either: either, 
    functorEither: functorEither, 
    bifunctorEither: bifunctorEither, 
    applyEither: applyEither, 
    applicativeEither: applicativeEither, 
    altEither: altEither, 
    bindEither: bindEither, 
    monadEither: monadEither, 
    extendEither: extendEither, 
    showEither: showEither, 
    eqEither: eqEither, 
    ordEither: ordEither, 
    boundedEither: boundedEither, 
    foldableEither: foldableEither, 
    bifoldableEither: bifoldableEither, 
    traversableEither: traversableEither, 
    bitraversableEither: bitraversableEither
};
