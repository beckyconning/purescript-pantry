// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var Control_Alt = require("Control.Alt");
var Control_Plus = require("Control.Plus");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Alternative = require("Control.Alternative");
var Control_Lazy = require("Control.Lazy");
var Control_MonadPlus = require("Control.MonadPlus");
var Data_Either = require("Data.Either");
var StateT = function (x) {
    return x;
};
var runStateT = function (_153) {
    return _153;
};
var withStateT = function (f) {
    return function (s) {
        return StateT(Prelude["<<<"](Prelude.semigroupoidFn)(runStateT(s))(f));
    };
};
var monadTransStateT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_2) {
    return function (m) {
        return function (s) {
            return Prelude.bind(__dict_Monad_2["__superclass_Prelude.Bind_1"]())(m)(function (_34) {
                return Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_34, s));
            });
        };
    };
});
var mapStateT = function (f) {
    return function (m) {
        return StateT(Prelude["<<<"](Prelude.semigroupoidFn)(f)(runStateT(m)));
    };
};
var liftPassState = function (__dict_Monad_8) {
    return function (pass) {
        return function (m) {
            return StateT(function (s) {
                return pass(Prelude.bind(__dict_Monad_8["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_36) {
                    return Prelude["return"](__dict_Monad_8["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_36.value0.value0, _36.value1), _36.value0.value1));
                }));
            });
        };
    };
};
var liftListenState = function (__dict_Monad_9) {
    return function (listen) {
        return function (m) {
            return StateT(function (s) {
                return Prelude.bind(__dict_Monad_9["__superclass_Prelude.Bind_1"]())(listen(runStateT(m)(s)))(function (_35) {
                    return Prelude["return"](__dict_Monad_9["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_35.value0.value0, _35.value1), _35.value0.value1));
                });
            });
        };
    };
};
var liftCatchState = function ($$catch) {
    return function (m) {
        return function (h) {
            return StateT(function (s) {
                return $$catch(runStateT(m)(s))(function (e) {
                    return runStateT(h(e))(s);
                });
            });
        };
    };
};
var liftCallCCState$prime = function (callCC) {
    return function (f) {
        return StateT(function (s) {
            return callCC(function (c) {
                return runStateT(f(function (a) {
                    return StateT(function (s$prime) {
                        return c(new Data_Tuple.Tuple(a, s$prime));
                    });
                }))(s);
            });
        });
    };
};
var liftCallCCState = function (callCC) {
    return function (f) {
        return StateT(function (s) {
            return callCC(function (c) {
                return runStateT(f(function (a) {
                    return StateT(function (_152) {
                        return c(new Data_Tuple.Tuple(a, s));
                    });
                }))(s);
            });
        });
    };
};
var lazyStateT = new Control_Lazy.Lazy(function (f) {
    return StateT(function (s) {
        return runStateT(f(Prelude.unit))(s);
    });
});
var execStateT = function (__dict_Apply_11) {
    return function (m) {
        return function (s) {
            return Prelude["<$>"](__dict_Apply_11["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runStateT(m)(s));
        };
    };
};
var evalStateT = function (__dict_Apply_12) {
    return function (m) {
        return function (s) {
            return Prelude["<$>"](__dict_Apply_12["__superclass_Prelude.Functor_0"]())(Data_Tuple.fst)(runStateT(m)(s));
        };
    };
};
var monadStateT = function (__dict_Monad_3) {
    return new Prelude.Monad(function () {
        return applicativeStateT(__dict_Monad_3);
    }, function () {
        return bindStateT(__dict_Monad_3);
    });
};
var functorStateT = function (__dict_Monad_10) {
    return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_10)));
};
var bindStateT = function (__dict_Monad_13) {
    return new Prelude.Bind(function () {
        return applyStateT(__dict_Monad_13);
    }, function (_154) {
        return function (f) {
            return function (s) {
                return Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(_154(s))(function (_32) {
                    return runStateT(f(_32.value0))(_32.value1);
                });
            };
        };
    });
};
var applyStateT = function (__dict_Monad_14) {
    return new Prelude.Apply(function () {
        return functorStateT(__dict_Monad_14);
    }, Prelude.ap(monadStateT(__dict_Monad_14)));
};
var applicativeStateT = function (__dict_Monad_15) {
    return new Prelude.Applicative(function () {
        return applyStateT(__dict_Monad_15);
    }, function (a) {
        return StateT(function (s) {
            return Prelude["return"](__dict_Monad_15["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(a, s));
        });
    });
};
var monadEffState = function (__dict_Monad_6) {
    return function (__dict_MonadEff_7) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadStateT(__dict_Monad_6);
        }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransStateT)(__dict_Monad_6))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_7)));
    };
};
var monadRecStateT = function (__dict_MonadRec_4) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadStateT(__dict_MonadRec_4["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return function (a) {
            var f$prime = function (_155) {
                return Prelude.bind((__dict_MonadRec_4["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runStateT(f(_155.value0))(_155.value1))(function (_33) {
                    return Prelude["return"]((__dict_MonadRec_4["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                        if (_33.value0 instanceof Data_Either.Left) {
                            return new Data_Either.Left(new Data_Tuple.Tuple(_33.value0.value0, _33.value1));
                        };
                        if (_33.value0 instanceof Data_Either.Right) {
                            return new Data_Either.Right(new Data_Tuple.Tuple(_33.value0.value0, _33.value1));
                        };
                        throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs line 73, column 5 - line 79, column 1: " + [ _33.value0.constructor.name ]);
                    })());
                });
            };
            return function (s) {
                return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_4)(f$prime)(new Data_Tuple.Tuple(a, s));
            };
        };
    });
};
var altStateT = function (__dict_Monad_18) {
    return function (__dict_Alt_19) {
        return new Control_Alt.Alt(function () {
            return functorStateT(__dict_Monad_18);
        }, function (x) {
            return function (y) {
                return StateT(function (s) {
                    return Control_Alt["<|>"](__dict_Alt_19)(runStateT(x)(s))(runStateT(y)(s));
                });
            };
        });
    };
};
var plusStateT = function (__dict_Monad_0) {
    return function (__dict_Plus_1) {
        return new Control_Plus.Plus(function () {
            return altStateT(__dict_Monad_0)(__dict_Plus_1["__superclass_Control.Alt.Alt_0"]());
        }, StateT(function (_151) {
            return Control_Plus.empty(__dict_Plus_1);
        }));
    };
};
var alternativeStateT = function (__dict_Monad_16) {
    return function (__dict_Alternative_17) {
        return new Control_Alternative.Alternative(function () {
            return plusStateT(__dict_Monad_16)(__dict_Alternative_17["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeStateT(__dict_Monad_16);
        });
    };
};
var monadPlusStateT = function (__dict_MonadPlus_5) {
    return new Control_MonadPlus.MonadPlus(function () {
        return alternativeStateT(__dict_MonadPlus_5["__superclass_Prelude.Monad_0"]())(__dict_MonadPlus_5["__superclass_Control.Alternative.Alternative_1"]());
    }, function () {
        return monadStateT(__dict_MonadPlus_5["__superclass_Prelude.Monad_0"]());
    });
};
module.exports = {
    StateT: StateT, 
    "liftCallCCState'": liftCallCCState$prime, 
    liftCallCCState: liftCallCCState, 
    liftPassState: liftPassState, 
    liftListenState: liftListenState, 
    liftCatchState: liftCatchState, 
    withStateT: withStateT, 
    mapStateT: mapStateT, 
    execStateT: execStateT, 
    evalStateT: evalStateT, 
    runStateT: runStateT, 
    functorStateT: functorStateT, 
    applyStateT: applyStateT, 
    applicativeStateT: applicativeStateT, 
    altStateT: altStateT, 
    plusStateT: plusStateT, 
    alternativeStateT: alternativeStateT, 
    bindStateT: bindStateT, 
    monadStateT: monadStateT, 
    monadRecStateT: monadRecStateT, 
    monadPlusStateT: monadPlusStateT, 
    monadTransStateT: monadTransStateT, 
    lazyStateT: lazyStateT, 
    monadEffState: monadEffState
};
