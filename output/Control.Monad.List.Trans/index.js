// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Data_Lazy = require("Data.Lazy");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Monoid = require("Data.Monoid");
var Data_Unfoldable = require("Data.Unfoldable");
var Yield = (function () {
    function Yield(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Yield.create = function (value0) {
        return function (value1) {
            return new Yield(value0, value1);
        };
    };
    return Yield;
})();
var Skip = (function () {
    function Skip(value0) {
        this.value0 = value0;
    };
    Skip.create = function (value0) {
        return new Skip(value0);
    };
    return Skip;
})();
var Done = (function () {
    function Done() {

    };
    Done.value = new Done();
    return Done;
})();
var ListT = (function () {
    function ListT(value0) {
        this.value0 = value0;
    };
    ListT.create = function (value0) {
        return new ListT(value0);
    };
    return ListT;
})();
var wrapLazy = function (__dict_Applicative_0) {
    return function (v) {
        return ListT.create(Prelude.pure(__dict_Applicative_0)(new Skip(v)));
    };
};
var wrapEffect = function (__dict_Functor_1) {
    return function (v) {
        return ListT.create(Prelude["<$>"](__dict_Functor_1)(Prelude["<<<"](Prelude.semigroupoidFn)(Skip.create)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Lazy.defer)(Prelude["const"])))(v));
    };
};
var unfold = function (__dict_Monad_2) {
    return function (f) {
        return function (z) {
            var g = function (_201) {
                if (_201 instanceof Data_Maybe.Just) {
                    return new Yield(_201.value0.value1, Data_Lazy.defer(function (_194) {
                        return unfold(__dict_Monad_2)(f)(_201.value0.value0);
                    }));
                };
                if (_201 instanceof Data_Maybe.Nothing) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 115, column 3 - line 116, column 3: " + [ _201.constructor.name ]);
            };
            return ListT.create(Prelude["<$>"](((__dict_Monad_2["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(f(z)));
        };
    };
};
var runListT = function (_197) {
    return _197.value0;
};
var scanl = function (__dict_Monad_3) {
    return function (f) {
        return function (b) {
            return function (l) {
                var g = function (_211) {
                    var h = function (_212) {
                        if (_212 instanceof Yield) {
                            var b$prime = f(_211.value0)(_212.value0);
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime, Data_Lazy.force(_212.value1)), b$prime));
                        };
                        if (_212 instanceof Skip) {
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_211.value0, Data_Lazy.force(_212.value0)), _211.value0));
                        };
                        if (_212 instanceof Done) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 214, column 5 - line 216, column 5: " + [ _212.constructor.name ]);
                    };
                    return Prelude["<$>"](((__dict_Monad_3["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(runListT(_211.value1));
                };
                return unfold(__dict_Monad_3)(g)(new Data_Tuple.Tuple(b, l));
            };
        };
    };
};
var stepMap = function (__dict_Functor_4) {
    return function (f) {
        return function (l) {
            return ListT.create(Prelude["<$>"](__dict_Functor_4)(f)(runListT(l)));
        };
    };
};
var takeWhile = function (__dict_Applicative_5) {
    return function (f) {
        var g = function (_203) {
            if (_203 instanceof Yield) {
                var _287 = f(_203.value0);
                if (_287) {
                    return new Yield(_203.value0, Prelude["<$>"](Data_Lazy.functorLazy)(takeWhile(__dict_Applicative_5)(f))(_203.value1));
                };
                if (!_287) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 139, column 3 - line 140, column 3: " + [ _287.constructor.name ]);
            };
            if (_203 instanceof Skip) {
                return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(takeWhile(__dict_Applicative_5)(f))(_203.value0));
            };
            if (_203 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 139, column 3 - line 140, column 3: " + [ _203.constructor.name ]);
        };
        return stepMap((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g);
    };
};
var uncons = function (__dict_Monad_6) {
    return function (l) {
        var g = function (_208) {
            if (_208 instanceof Yield) {
                return Prelude.pure(__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Just.create(new Data_Tuple.Tuple(_208.value0, Data_Lazy.force(_208.value1))));
            };
            if (_208 instanceof Skip) {
                return uncons(__dict_Monad_6)(Data_Lazy.force(_208.value0));
            };
            if (_208 instanceof Done) {
                return Prelude.pure(__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Nothing.value);
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 180, column 3 - line 181, column 3: " + [ _208.constructor.name ]);
        };
        return Prelude[">>="](__dict_Monad_6["__superclass_Prelude.Bind_1"]())(runListT(l))(g);
    };
};
var tail = function (__dict_Monad_7) {
    return function (l) {
        return Prelude["<$>"](((__dict_Monad_7["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(__dict_Monad_7)(l));
    };
};
var prepend$prime = function (__dict_Applicative_8) {
    return function (h) {
        return function (t) {
            return ListT.create(Prelude.pure(__dict_Applicative_8)(new Yield(h, t)));
        };
    };
};
var prepend = function (__dict_Applicative_9) {
    return function (h) {
        return function (t) {
            return prepend$prime(__dict_Applicative_9)(h)(Data_Lazy.defer(Prelude["const"](t)));
        };
    };
};
var nil = function (__dict_Applicative_10) {
    return ListT.create(Prelude.pure(__dict_Applicative_10)(Done.value));
};
var singleton = function (__dict_Applicative_12) {
    return function (a) {
        return prepend(__dict_Applicative_12)(a)(nil(__dict_Applicative_12));
    };
};
var take = function (__dict_Applicative_13) {
    return function (_198) {
        return function (fa) {
            if (_198 === 0) {
                return nil(__dict_Applicative_13);
            };
            var f = function (_202) {
                if (_202 instanceof Yield) {
                    return new Yield(_202.value0, Prelude["<$>"](Data_Lazy.functorLazy)(take(__dict_Applicative_13)(Prelude["-"](Prelude.ringInt)(_198)(1)))(_202.value1));
                };
                if (_202 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(take(__dict_Applicative_13)(_198))(_202.value0));
                };
                if (_202 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 132, column 3 - line 133, column 3: " + [ _202.constructor.name ]);
            };
            return stepMap((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(fa);
        };
    };
};
var zipWith$prime = function (__dict_Monad_14) {
    return function (f) {
        var g = function (_213) {
            return function (_214) {
                if (_214 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Monad_14["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_14["__superclass_Prelude.Applicative_0"]()));
                };
                if (_213 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Monad_14["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_14["__superclass_Prelude.Applicative_0"]()));
                };
                if (_213 instanceof Data_Maybe.Just && _214 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"](((__dict_Monad_14["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(prepend$prime(__dict_Monad_14["__superclass_Prelude.Applicative_0"]()))(Data_Lazy.defer(function (_195) {
                        return zipWith$prime(__dict_Monad_14)(f)(_213.value0.value1)(_214.value0.value1);
                    })))(f(_213.value0.value0)(_214.value0.value0));
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 222, column 3 - line 227, column 3: " + [ _213.constructor.name, _214.constructor.name ]);
            };
        };
        var loop = function (fa) {
            return function (fb) {
                return wrapEffect(((__dict_Monad_14["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.bind(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_14)(fa))(function (_64) {
                    return Prelude.bind(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_14)(fb))(function (_63) {
                        return g(_64)(_63);
                    });
                }));
            };
        };
        return loop;
    };
};
var zipWith = function (__dict_Monad_15) {
    return function (f) {
        var g = function (a) {
            return function (b) {
                return Prelude.pure(__dict_Monad_15["__superclass_Prelude.Applicative_0"]())(f(a)(b));
            };
        };
        return zipWith$prime(__dict_Monad_15)(g);
    };
};
var mapMaybe = function (__dict_Functor_21) {
    return function (f) {
        var g = function (_207) {
            if (_207 instanceof Yield) {
                return Data_Maybe.fromMaybe(Skip.create)(Prelude["<$>"](Data_Maybe.functorMaybe)(Yield.create)(f(_207.value0)))(Prelude["<$>"](Data_Lazy.functorLazy)(mapMaybe(__dict_Functor_21)(f))(_207.value1));
            };
            if (_207 instanceof Skip) {
                return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(mapMaybe(__dict_Functor_21)(f))(_207.value0));
            };
            if (_207 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 168, column 3 - line 169, column 3: " + [ _207.constructor.name ]);
        };
        return stepMap(__dict_Functor_21)(g);
    };
};
var iterate = function (__dict_Monad_22) {
    return function (f) {
        return function (a) {
            var g = function (a_1) {
                return Prelude.pure(__dict_Monad_22["__superclass_Prelude.Applicative_0"]())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(a_1), a_1)));
            };
            return unfold(__dict_Monad_22)(g)(a);
        };
    };
};
var repeat = function (__dict_Monad_23) {
    return iterate(__dict_Monad_23)(Prelude.id(Prelude.categoryFn));
};
var head = function (__dict_Monad_24) {
    return function (l) {
        return Prelude["<$>"](((__dict_Monad_24["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(__dict_Monad_24)(l));
    };
};
var functorListT = function (__dict_Functor_25) {
    return new Prelude.Functor(function (f) {
        var g = function (_215) {
            if (_215 instanceof Yield) {
                return new Yield(f(_215.value0), Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorListT(__dict_Functor_25))(f))(_215.value1));
            };
            if (_215 instanceof Skip) {
                return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorListT(__dict_Functor_25))(f))(_215.value0));
            };
            if (_215 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 245, column 5 - line 246, column 5: " + [ _215.constructor.name ]);
        };
        return stepMap(__dict_Functor_25)(g);
    });
};
var fromEffect = function (__dict_Applicative_26) {
    return function (fa) {
        return ListT.create(Prelude["<$>"]((__dict_Applicative_26["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (_9) {
            return new Yield(_9, Data_Lazy.defer(function (_193) {
                return nil(__dict_Applicative_26);
            }));
        })(fa));
    };
};
var monadTransListT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_27) {
    return fromEffect(__dict_Monad_27["__superclass_Prelude.Applicative_0"]());
});
var foldl$prime = function (__dict_Monad_28) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (_209) {
                    if (_209 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(__dict_Monad_28["__superclass_Prelude.Applicative_0"]())(b);
                    };
                    if (_209 instanceof Data_Maybe.Just) {
                        return Prelude[">>="](__dict_Monad_28["__superclass_Prelude.Bind_1"]())(f(b)(_209.value0.value0))(Prelude.flip(loop)(_209.value0.value1));
                    };
                    throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 197, column 5 - line 198, column 5: " + [ _209.constructor.name ]);
                };
                return Prelude[">>="](__dict_Monad_28["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_28)(l))(g);
            };
        };
        return loop;
    };
};
var foldl = function (__dict_Monad_29) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (_210) {
                    if (_210 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(__dict_Monad_29["__superclass_Prelude.Applicative_0"]())(b);
                    };
                    if (_210 instanceof Data_Maybe.Just) {
                        return loop(f(b)(_210.value0.value0))(_210.value0.value1);
                    };
                    throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 205, column 5 - line 206, column 5: " + [ _210.constructor.name ]);
                };
                return Prelude[">>="](__dict_Monad_29["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_29)(l))(g);
            };
        };
        return loop;
    };
};
var filter = function (__dict_Functor_30) {
    return function (f) {
        var g = function (_206) {
            if (_206 instanceof Yield) {
                var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(filter(__dict_Functor_30)(f))(_206.value1);
                var _330 = f(_206.value0);
                if (_330) {
                    return new Yield(_206.value0, s$prime);
                };
                if (!_330) {
                    return new Skip(s$prime);
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 161, column 3 - line 162, column 3: " + [ _330.constructor.name ]);
            };
            if (_206 instanceof Skip) {
                var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(filter(__dict_Functor_30)(f))(_206.value0);
                return new Skip(s$prime);
            };
            if (_206 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 161, column 3 - line 162, column 3: " + [ _206.constructor.name ]);
        };
        return stepMap(__dict_Functor_30)(g);
    };
};
var dropWhile = function (__dict_Applicative_31) {
    return function (f) {
        var g = function (_205) {
            if (_205 instanceof Yield) {
                var _335 = f(_205.value0);
                if (_335) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(dropWhile(__dict_Applicative_31)(f))(_205.value1));
                };
                if (!_335) {
                    return new Yield(_205.value0, _205.value1);
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 154, column 3 - line 155, column 3: " + [ _335.constructor.name ]);
            };
            if (_205 instanceof Skip) {
                return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(dropWhile(__dict_Applicative_31)(f))(_205.value0));
            };
            if (_205 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 154, column 3 - line 155, column 3: " + [ _205.constructor.name ]);
        };
        return stepMap((__dict_Applicative_31["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g);
    };
};
var drop = function (__dict_Applicative_32) {
    return function (_199) {
        return function (fa) {
            if (_199 === 0) {
                return fa;
            };
            var f = function (_204) {
                if (_204 instanceof Yield) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(drop(__dict_Applicative_32)(Prelude["-"](Prelude.ringInt)(_199)(1)))(_204.value1));
                };
                if (_204 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(drop(__dict_Applicative_32)(_199))(_204.value0));
                };
                if (_204 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 147, column 3 - line 148, column 3: " + [ _204.constructor.name ]);
            };
            return stepMap((__dict_Applicative_32["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(fa);
        };
    };
};
var cons = function (__dict_Applicative_33) {
    return function (lh) {
        return function (t) {
            return ListT.create(Prelude.pure(__dict_Applicative_33)(new Yield(Data_Lazy.force(lh), t)));
        };
    };
};
var unfoldableListT = function (__dict_Monad_34) {
    return new Data_Unfoldable.Unfoldable(function (f) {
        return function (b) {
            var go = function (_216) {
                if (_216 instanceof Data_Maybe.Nothing) {
                    return nil(__dict_Monad_34["__superclass_Prelude.Applicative_0"]());
                };
                if (_216 instanceof Data_Maybe.Just) {
                    return cons(__dict_Monad_34["__superclass_Prelude.Applicative_0"]())(Prelude.pure(Data_Lazy.applicativeLazy)(_216.value0.value0))(Data_Lazy.defer(function (_196) {
                        return go(f(_216.value0.value1));
                    }));
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 249, column 1 - line 254, column 1: " + [ _216.constructor.name ]);
            };
            return go(f(b));
        };
    });
};
var semigroupListT = function (__dict_Applicative_36) {
    return new Prelude.Semigroup(concat(__dict_Applicative_36));
};
var concat = function (__dict_Applicative_35) {
    return function (x) {
        return function (y) {
            var f = function (_200) {
                if (_200 instanceof Yield) {
                    return new Yield(_200.value0, Prelude["<$>"](Data_Lazy.functorLazy)(function (_7) {
                        return Prelude["<>"](semigroupListT(__dict_Applicative_35))(_7)(y);
                    })(_200.value1));
                };
                if (_200 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(function (_8) {
                        return Prelude["<>"](semigroupListT(__dict_Applicative_35))(_8)(y);
                    })(_200.value0));
                };
                if (_200 instanceof Done) {
                    return new Skip(Data_Lazy.defer(Prelude["const"](y)));
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 91, column 3 - line 92, column 3: " + [ _200.constructor.name ]);
            };
            return stepMap((__dict_Applicative_35["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(x);
        };
    };
};
var monoidListT = function (__dict_Applicative_16) {
    return new Data_Monoid.Monoid(function () {
        return semigroupListT(__dict_Applicative_16);
    }, nil(__dict_Applicative_16));
};
var catMaybes = function (__dict_Functor_37) {
    return mapMaybe(__dict_Functor_37)(Prelude.id(Prelude.categoryFn));
};
var monadListT = function (__dict_Monad_18) {
    return new Prelude.Monad(function () {
        return applicativeListT(__dict_Monad_18);
    }, function () {
        return bindListT(__dict_Monad_18);
    });
};
var bindListT = function (__dict_Monad_38) {
    return new Prelude.Bind(function () {
        return applyListT(__dict_Monad_38);
    }, function (fa) {
        return function (f) {
            var g = function (_217) {
                if (_217 instanceof Yield) {
                    var h = function (s_1) {
                        return Prelude["<>"](semigroupListT(__dict_Monad_38["__superclass_Prelude.Applicative_0"]()))(f(_217.value0))(Prelude[">>="](bindListT(__dict_Monad_38))(s_1)(f));
                    };
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(h)(_217.value1));
                };
                if (_217 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(function (_10) {
                        return Prelude[">>="](bindListT(__dict_Monad_38))(_10)(f);
                    })(_217.value0));
                };
                if (_217 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs line 262, column 5 - line 265, column 5: " + [ _217.constructor.name ]);
            };
            return stepMap(((__dict_Monad_38["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(fa);
        };
    });
};
var applyListT = function (__dict_Monad_39) {
    return new Prelude.Apply(function () {
        return functorListT(((__dict_Monad_39["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    }, Prelude.ap(monadListT(__dict_Monad_39)));
};
var applicativeListT = function (__dict_Monad_40) {
    return new Prelude.Applicative(function () {
        return applyListT(__dict_Monad_40);
    }, singleton(__dict_Monad_40["__superclass_Prelude.Applicative_0"]()));
};
var monadEffListT = function (__dict_Monad_19) {
    return function (__dict_MonadEff_20) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadListT(__dict_Monad_19);
        }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransListT)(__dict_Monad_19))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_20)));
    };
};
var altListT = function (__dict_Applicative_42) {
    return new Control_Alt.Alt(function () {
        return functorListT((__dict_Applicative_42["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    }, concat(__dict_Applicative_42));
};
var plusListT = function (__dict_Monad_11) {
    return new Control_Plus.Plus(function () {
        return altListT(__dict_Monad_11["__superclass_Prelude.Applicative_0"]());
    }, nil(__dict_Monad_11["__superclass_Prelude.Applicative_0"]()));
};
var alternativeListT = function (__dict_Monad_41) {
    return new Control_Alternative.Alternative(function () {
        return plusListT(__dict_Monad_41);
    }, function () {
        return applicativeListT(__dict_Monad_41);
    });
};
var monadPlusListT = function (__dict_Monad_17) {
    return new Control_MonadPlus.MonadPlus(function () {
        return alternativeListT(__dict_Monad_17);
    }, function () {
        return monadListT(__dict_Monad_17);
    });
};
module.exports = {
    "zipWith'": zipWith$prime, 
    zipWith: zipWith, 
    wrapLazy: wrapLazy, 
    wrapEffect: wrapEffect, 
    unfold: unfold, 
    uncons: uncons, 
    takeWhile: takeWhile, 
    take: take, 
    tail: tail, 
    singleton: singleton, 
    scanl: scanl, 
    repeat: repeat, 
    "prepend'": prepend$prime, 
    prepend: prepend, 
    nil: nil, 
    mapMaybe: mapMaybe, 
    iterate: iterate, 
    head: head, 
    fromEffect: fromEffect, 
    "foldl'": foldl$prime, 
    foldl: foldl, 
    filter: filter, 
    dropWhile: dropWhile, 
    drop: drop, 
    cons: cons, 
    catMaybes: catMaybes, 
    semigroupListT: semigroupListT, 
    monoidListT: monoidListT, 
    functorListT: functorListT, 
    unfoldableListT: unfoldableListT, 
    applyListT: applyListT, 
    applicativeListT: applicativeListT, 
    bindListT: bindListT, 
    monadListT: monadListT, 
    monadTransListT: monadTransListT, 
    altListT: altListT, 
    plusListT: plusListT, 
    alternativeListT: alternativeListT, 
    monadPlusListT: monadPlusListT, 
    monadEffListT: monadEffListT
};
