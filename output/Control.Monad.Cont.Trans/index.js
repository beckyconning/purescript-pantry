// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var ContT = function (x) {
    return x;
};
var runContT = function (_68) {
    return function (k) {
        return _68(k);
    };
};
var withContT = function (f) {
    return function (m) {
        return function (k) {
            return runContT(m)(f(k));
        };
    };
};
var monadTransContT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_0) {
    return function (m) {
        return function (k) {
            return Prelude[">>="](__dict_Monad_0["__superclass_Prelude.Bind_1"]())(m)(k);
        };
    };
});
var mapContT = function (f) {
    return function (m) {
        return function (k) {
            return f(runContT(m)(k));
        };
    };
};
var functorContT = function (__dict_Monad_4) {
    return new Prelude.Functor(function (f) {
        return function (m) {
            return function (k) {
                return runContT(m)(function (a) {
                    return k(f(a));
                });
            };
        };
    });
};
var callCC = function (f) {
    return function (k) {
        return runContT(f(function (a) {
            return function (_67) {
                return k(a);
            };
        }))(k);
    };
};
var applyContT = function (__dict_Functor_6) {
    return function (__dict_Monad_7) {
        return new Prelude.Apply(function () {
            return functorContT(__dict_Monad_7);
        }, function (f) {
            return function (v) {
                return function (k) {
                    return runContT(f)(function (g) {
                        return runContT(v)(function (a) {
                            return k(g(a));
                        });
                    });
                };
            };
        });
    };
};
var bindContT = function (__dict_Monad_5) {
    return new Prelude.Bind(function () {
        return applyContT(((__dict_Monad_5["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_5);
    }, function (m) {
        return function (k) {
            return function (k$prime) {
                return runContT(m)(function (a) {
                    return runContT(k(a))(k$prime);
                });
            };
        };
    });
};
var applicativeContT = function (__dict_Functor_8) {
    return function (__dict_Monad_9) {
        return new Prelude.Applicative(function () {
            return applyContT(__dict_Functor_8)(__dict_Monad_9);
        }, function (a) {
            return function (k) {
                return k(a);
            };
        });
    };
};
var monadContT = function (__dict_Monad_3) {
    return new Prelude.Monad(function () {
        return applicativeContT(((__dict_Monad_3["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_3);
    }, function () {
        return bindContT(__dict_Monad_3);
    });
};
var monadEffContT = function (__dict_Monad_1) {
    return function (__dict_MonadEff_2) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadContT(__dict_Monad_1);
        }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransContT)(__dict_Monad_1))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_2)));
    };
};
module.exports = {
    ContT: ContT, 
    callCC: callCC, 
    withContT: withContT, 
    mapContT: mapContT, 
    runContT: runContT, 
    functorContT: functorContT, 
    applyContT: applyContT, 
    applicativeContT: applicativeContT, 
    bindContT: bindContT, 
    monadContT: monadContT, 
    monadTransContT: monadTransContT, 
    monadEffContT: monadEffContT
};
