// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Test_Spec_Console = require("Test.Spec.Console");
var Test_Spec_Summary = require("Test.Spec.Summary");
var Control_Monad_Eff_Console = require("Control.Monad.Eff.Console");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var Data_Foldable = require("Data.Foldable");
var Data_Array = require("Data.Array");
var Test_Spec_Reporter = require("Test.Spec.Reporter");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Test_Spec = require("Test.Spec");
var Data_Monoid = require("Data.Monoid");
var printEntry = function (_192) {
    if (_192 instanceof Test_Spec_Reporter.It && _192.value1 instanceof Test_Spec.Success) {
        return Test_Spec_Console.withAttrs([ 32 ])(Test_Spec_Console.writeln("\u2713\ufe0e " + _192.value0));
    };
    if (_192 instanceof Test_Spec_Reporter.Pending) {
        return Test_Spec_Console.withAttrs([ 33 ])(Test_Spec_Console.writeln("~ " + _192.value0));
    };
    if (_192 instanceof Test_Spec_Reporter.It && _192.value1 instanceof Test_Spec.Failure) {
        return function __do() {
            Test_Spec_Console.withAttrs([ 31 ])(Test_Spec_Console.writeln("\u2717 " + (_192.value0 + ":")))();
            Control_Monad_Eff_Console.log("")();
            return Test_Spec_Console.withAttrs([ 31 ])(Test_Spec_Console.writeln("  " + Control_Monad_Eff_Exception.message(_192.value1.value0)))();
        };
    };
    if (_192 instanceof Test_Spec_Reporter.Describe) {
        var printNames = function (ns) {
            return Test_Spec_Console.withAttrs([ 1, 35 ])(Test_Spec_Console.writeln(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" Â» ")(ns)));
        };
        return function __do() {
            Test_Spec_Console.writeln("")();
            return printNames(_192.value0)();
        };
    };
    throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-spec/src/Test/Spec/Reporter/Console.purs line 47, column 1 - line 49, column 1: " + [ _192.constructor.name ]);
};
var pluralize = function (s) {
    return function (_190) {
        if (_190 === 1) {
            return s;
        };
        return s + "s";
    };
};
var printPassedFailed = function (p) {
    return function (f) {
        var total = Prelude["+"](Prelude.semiringInt)(p)(f);
        var testStr = pluralize("test")(total);
        var attrs = (function () {
            var _280 = Prelude[">"](Prelude.ordInt)(f)(0);
            if (_280) {
                return [ 31 ];
            };
            if (!_280) {
                return [ 32 ];
            };
            throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-spec/src/Test/Spec/Reporter/Console.purs line 20, column 1 - line 21, column 1: " + [ _280.constructor.name ]);
        })();
        var amount = Prelude.show(Prelude.showInt)(p) + ("/" + (Prelude.show(Prelude.showInt)(total) + (" " + (testStr + " passed"))));
        return Test_Spec_Console.withAttrs(attrs)(Test_Spec_Console.writeln(amount));
    };
};
var printPending = function (p) {
    var _281 = Prelude[">"](Prelude.ordInt)(p)(0);
    if (_281) {
        return Test_Spec_Console.withAttrs([ 33 ])(function __do() {
            Test_Spec_Console.write(Prelude.show(Prelude.showInt)(p))();
            Test_Spec_Console.write(" ")();
            Test_Spec_Console.write(pluralize("test")(p))();
            return Test_Spec_Console.writeln(" pending")();
        });
    };
    if (!_281) {
        return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
    };
    throw new Error("Failed pattern match at /Users/beckyconning/Documents/purescript-pantry/bower_components/purescript-spec/src/Test/Spec/Reporter/Console.purs line 28, column 1 - line 29, column 1: " + [ _281.constructor.name ]);
};
var printSummary$prime = function (_191) {
    return function __do() {
        Test_Spec_Console.writeln("")();
        Test_Spec_Console.withAttrs([ 1 ])(Test_Spec_Console.writeln("Summary"))();
        printPassedFailed(_191.value0)(_191.value1)();
        printPending(_191.value2)();
        return Test_Spec_Console.writeln("")();
    };
};
var printSummary = function (groups) {
    return printSummary$prime(Test_Spec_Summary.summarize(groups));
};
var consoleReporter = function (groups) {
    return function __do() {
        Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(printEntry)(Data_Array.concatMap(Test_Spec_Reporter.collapse)(groups))();
        return printSummary(groups)();
    };
};
module.exports = {
    consoleReporter: consoleReporter
};
