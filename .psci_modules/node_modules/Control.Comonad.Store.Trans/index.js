
/**
 *  | This module defines the store comonad transformer, `StoreT`.
 */
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Control_Comonad = require("Control.Comonad");
var Control_Comonad_Trans = require("Control.Comonad.Trans");
var Data_Tuple = require("Data.Tuple");

/**
 *  | The store comonad transformer.
 *  |
 *  | This comonad transformer extends the context of a value in the base comonad so that the value
 *  | depends on a position of type `s`.
 *  |
 *  | The `ComonadStore` type class describes the operations supported by this comonad.
 */
var StoreT = function (x) {
    return x;
};

/**
 *  | Unwrap a value in the `StoreT` comonad.
 */
var runStoreT = function (_301) {
    return _301;
};
var functorStoreT = function (__dict_Functor_0) {
    return new Prelude.Functor(function (f) {
        return function (_302) {
            return StoreT(new Data_Tuple.Tuple(Prelude["<$>"](__dict_Functor_0)(function (h) {
                return Prelude[">>>"](Prelude.semigroupoidFn)(h)(f);
            })(_302.value0), _302.value1));
        };
    });
};
var extendStoreT = function (__dict_Extend_1) {
    return new Control_Extend.Extend(function () {
        return functorStoreT(__dict_Extend_1["__superclass_Prelude.Functor_0"]());
    }, function (f) {
        return function (_303) {
            return StoreT(new Data_Tuple.Tuple(Control_Extend["<<="](__dict_Extend_1)(function (w$prime) {
                return function (s$prime) {
                    return f(StoreT(new Data_Tuple.Tuple(w$prime, s$prime)));
                };
            })(_303.value0), _303.value1));
        };
    });
};
var comonadTransStoreT = new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_2) {
    return function (_305) {
        return Prelude["<$>"]((__dict_Comonad_2["__superclass_Control.Extend.Extend_0"]())["__superclass_Prelude.Functor_0"]())(function (f) {
            return f(_305.value1);
        })(_305.value0);
    };
});
var comonadStoreT = function (__dict_Comonad_3) {
    return new Control_Comonad.Comonad(function () {
        return extendStoreT(__dict_Comonad_3["__superclass_Control.Extend.Extend_0"]());
    }, function (_304) {
        return Control_Comonad.extract(__dict_Comonad_3)(_304.value0)(_304.value1);
    });
};
module.exports = {
    StoreT: StoreT, 
    runStoreT: runStoreT, 
    functorStoreT: functorStoreT, 
    extendStoreT: extendStoreT, 
    comonadStoreT: comonadStoreT, 
    comonadTransStoreT: comonadTransStoreT
};
