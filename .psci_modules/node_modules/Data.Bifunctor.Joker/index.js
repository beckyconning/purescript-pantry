"use strict";
var Prelude = require("Prelude");
var Control_Biapplicative = require("Control.Biapplicative");
var Control_Biapply = require("Control.Biapply");
var Data_Bifunctor = require("Data.Bifunctor");

/**
 *  | Make a `Functor` over the second argument of a `Bifunctor`
 */
var Joker = (function () {
    function Joker(value0) {
        this.value0 = value0;
    };
    Joker.create = function (value0) {
        return new Joker(value0);
    };
    return Joker;
})();
var runJoker = function (_125) {
    return _125.value0;
};
var jokerFunctor = function (__dict_Functor_0) {
    return new Prelude.Functor(function (g) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(Joker.create)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.map(__dict_Functor_0)(g))(runJoker));
    });
};
var jokerBifunctor = function (__dict_Functor_1) {
    return new Data_Bifunctor.Bifunctor(function (_126) {
        return function (g) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Joker.create)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.map(__dict_Functor_1)(g))(runJoker));
        };
    });
};
var jokerBiapply = function (__dict_Apply_2) {
    return new Control_Biapply.Biapply(function () {
        return jokerBifunctor(__dict_Apply_2["__superclass_Prelude.Functor_0"]());
    }, function (_127) {
        return function (_128) {
            return new Joker(Prelude["<*>"](__dict_Apply_2)(_127.value0)(_128.value0));
        };
    });
};
var jokerBiapplicative = function (__dict_Applicative_3) {
    return new Control_Biapplicative.Biapplicative(function () {
        return jokerBiapply(__dict_Applicative_3["__superclass_Prelude.Apply_0"]());
    }, function (_129) {
        return function (b) {
            return new Joker(Prelude.pure(__dict_Applicative_3)(b));
        };
    });
};
module.exports = {
    Joker: Joker, 
    runJoker: runJoker, 
    jokerBifunctor: jokerBifunctor, 
    jokerFunctor: jokerFunctor, 
    jokerBiapply: jokerBiapply, 
    jokerBiapplicative: jokerBiapplicative
};
