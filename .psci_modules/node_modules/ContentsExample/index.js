
/**
 *  Represents the contents and whether they are being updated in real time or not
 *  type Contents = Tuple (Array JObject) Boolean
 *  contents :: String -> String -> String -> Signal Contents
 */
"use strict";
var Prelude = require("Prelude");
var Data_JSON = require("Data.JSON");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Control_Monad_Eff_Console = require("Control.Monad.Eff.Console");
var Data_Either = require("Data.Either");

/**
 * import Signal
 * import Signal.Loop
 * import Signal.Channel
 * import qualified Signal.Pantry  as P
 * import qualified Data.Pantry    as P
 * import qualified Signal.CouchDB as C
 * import qualified Data.CouchDB   as C
 *  Represents CouchDB document
 */
var Doc = (function () {
    function Doc(value0) {
        this.value0 = value0;
    };
    Doc.create = function (value0) {
        return new Doc(value0);
    };
    return Doc;
})();
var Preserve = function (x) {
    return x;
};
var showPreserve = new Prelude.Show(function (_614) {
    return _614.value0.name + ("\n---\nSodium: " + (Prelude.show(Prelude.showNumber)(_614.value0.sodium) + "g"));
});
var preserveToJSON = new Data_JSON.ToJSON(function (_612) {
    var deleted = function (_613) {
        if (_613 instanceof Data_Maybe.Just && _613.value0) {
            return [ Data_JSON[".="](Data_JSON.boolToJSON)("_deleted")(true) ];
        };
        return [  ];
    };
    return Data_JSON.object(Prelude["<>"](Prelude.semigroupArray)([ Data_JSON[".="](Data_JSON.stringToJSON)("_id")(_612.value0._id), Data_JSON[".="](Data_JSON.stringToJSON)("_rev")(_612.value0._rev), Data_JSON[".="](Data_JSON.stringToJSON)("name")(_612.value0.name), Data_JSON[".="](Data_JSON.numberToJSON)("sodium")(_612.value0.sodium) ])(deleted(_612.value0._deleted)));
});
var preserveFromJSON = new Data_JSON.FromJSON(function (_611) {
    if (_611 instanceof Data_JSON.JObject) {
        return Prelude.bind(Data_Either.bindEither)(Data_JSON[".:"](Data_JSON.stringFromJSON)(_611.value0)("_id"))(function (_92) {
            return Prelude.bind(Data_Either.bindEither)(Data_JSON[".:"](Data_JSON.stringFromJSON)(_611.value0)("_rev"))(function (_91) {
                return Prelude.bind(Data_Either.bindEither)(Data_JSON[".:?"](Data_JSON.boolFromJSON)(_611.value0)("_deleted"))(function (_90) {
                    return Prelude.bind(Data_Either.bindEither)(Data_JSON[".:"](Data_JSON.stringFromJSON)(_611.value0)("name"))(function (_89) {
                        return Prelude.bind(Data_Either.bindEither)(Data_JSON[".:"](Data_JSON.numberFromJSON)(_611.value0)("sodium"))(function (_88) {
                            var doc = new Doc({
                                _id: _92, 
                                _rev: _91, 
                                _deleted: _90, 
                                name: _89, 
                                sodium: _88
                            });
                            return Prelude.pure(Data_Either.applicativeEither)(doc);
                        });
                    });
                });
            });
        });
    };
    return Data_JSON.fail("Couldn't parse Preserve");
});
module.exports = {
    Preserve: Preserve, 
    Doc: Doc, 
    preserveFromJSON: preserveFromJSON, 
    preserveToJSON: preserveToJSON, 
    showPreserve: showPreserve
};
