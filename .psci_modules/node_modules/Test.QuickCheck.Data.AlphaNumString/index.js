"use strict";
var Data_String = require("Data.String");
var Test_QuickCheck_Gen = require("Test.QuickCheck.Gen");
var Prelude = require("Prelude");
var Test_QuickCheck_Arbitrary = require("Test.QuickCheck.Arbitrary");
var Data_Int = require("Data.Int");
var Data_String_Unsafe = require("Data.String.Unsafe");
var $$Math = require("Math");

/**
 *  | A newtype for `String` whose `Arbitrary` instance generated random
 *  | alphanumeric strings.
 */
var AlphaNumString = function (x) {
    return x;
};
var runAlphaNumString = function (_609) {
    return _609;
};
var coarbAlphaNumString = new Test_QuickCheck_Arbitrary.Coarbitrary(function (_610) {
    return Test_QuickCheck_Arbitrary.coarbitrary(Test_QuickCheck_Arbitrary.coarbString)(_610);
});
var arbAlphaNumString = new Test_QuickCheck_Arbitrary.Arbitrary((function () {
    var rest = Data_String.toCharArray("bcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
    var anyChar = Test_QuickCheck_Gen.oneOf(Prelude.pure(Test_QuickCheck_Gen.applicativeGen)("a"))(Prelude.map(Prelude.functorArray)(Prelude.pure(Test_QuickCheck_Gen.applicativeGen))(rest));
    return Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Prelude["<<<"](Prelude.semigroupoidFn)(AlphaNumString)(Data_String.fromCharArray))(Test_QuickCheck_Gen.arrayOf(anyChar));
})());
module.exports = {
    AlphaNumString: AlphaNumString, 
    runAlphaNumString: runAlphaNumString, 
    arbAlphaNumString: arbAlphaNumString, 
    coarbAlphaNumString: coarbAlphaNumString
};
