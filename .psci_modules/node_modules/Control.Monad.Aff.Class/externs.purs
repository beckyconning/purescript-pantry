module Control.Monad.Aff.Class (MonadAff, liftAff) where
import Prelude ()
import Control.Monad.Trans ()
import Control.Monad.Aff.Class ()
import Prim ()
import Prelude ()
import Control.Monad.Aff ()
import Control.Monad.Cont.Trans ()
import Control.Monad.Error.Trans ()
import Control.Monad.Except.Trans ()
import Control.Monad.List.Trans ()
import Control.Monad.Maybe.Trans ()
import Control.Monad.Reader.Trans ()
import Control.Monad.RWS.Trans ()
import Control.Monad.State.Trans ()
import Control.Monad.Trans ()
import Control.Monad.Writer.Trans ()
import Data.Monoid ()
class MonadAff e m where
  liftAff :: forall a. Control.Monad.Aff.Aff e a -> m a
foreign import instance monadAffAff :: Control.Monad.Aff.Class.MonadAff e (Control.Monad.Aff.Aff e)
foreign import instance monadAffContT :: (Prelude.Monad m, Control.Monad.Aff.Class.MonadAff eff m) => Control.Monad.Aff.Class.MonadAff eff (Control.Monad.Cont.Trans.ContT r m)
foreign import instance monadAffError :: (Prelude.Monad m, Control.Monad.Aff.Class.MonadAff eff m) => Control.Monad.Aff.Class.MonadAff eff (Control.Monad.Error.Trans.ErrorT e m)
foreign import instance monadAffExceptT :: (Prelude.Monad m, Control.Monad.Aff.Class.MonadAff eff m) => Control.Monad.Aff.Class.MonadAff eff (Control.Monad.Except.Trans.ExceptT e m)
foreign import instance monadAffListT :: (Prelude.Monad m, Control.Monad.Aff.Class.MonadAff eff m) => Control.Monad.Aff.Class.MonadAff eff (Control.Monad.List.Trans.ListT m)
foreign import instance monadAffMaybe :: (Prelude.Monad m, Control.Monad.Aff.Class.MonadAff eff m) => Control.Monad.Aff.Class.MonadAff eff (Control.Monad.Maybe.Trans.MaybeT m)
foreign import instance monadAffReader :: (Prelude.Monad m, Control.Monad.Aff.Class.MonadAff eff m) => Control.Monad.Aff.Class.MonadAff eff (Control.Monad.Reader.Trans.ReaderT r m)
foreign import instance monadAffRWS :: (Prelude.Monad m, Data.Monoid.Monoid w, Control.Monad.Aff.Class.MonadAff eff m) => Control.Monad.Aff.Class.MonadAff eff (Control.Monad.RWS.Trans.RWST r w s m)
foreign import instance monadAffState :: (Prelude.Monad m, Control.Monad.Aff.Class.MonadAff eff m) => Control.Monad.Aff.Class.MonadAff eff (Control.Monad.State.Trans.StateT s m)
foreign import instance monadAffWriter :: (Prelude.Monad m, Data.Monoid.Monoid w, Control.Monad.Aff.Class.MonadAff eff m) => Control.Monad.Aff.Class.MonadAff eff (Control.Monad.Writer.Trans.WriterT w m)