"use strict";
var $foreign = require("./foreign");
var Signal = require("Signal");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Timer = require("Control.Timer");

/**
 *  |Takes a signal and a time value, and creates a signal which yields `True`
 *  |when the input signal yields, then goes back to `False` after the given
 *  |number of milliseconds have elapsed, unless the input signal yields again
 *  |in the interim.
 */
var since = $foreign.sinceP(Signal.constant);
var second = 1000.0;
var millisecond = 1.0;

/**
 *  |Creates a signal which yields the current time (according to `now`) every
 *  |given number of milliseconds.
 */
var every = $foreign.everyP(Signal.constant);

/**
 *  |Takes a signal and delays its yielded values by a given number of
 *  |milliseconds.
 */
var delay = $foreign.delayP(Signal.constant);
module.exports = {
    second: second, 
    millisecond: millisecond, 
    since: since, 
    delay: delay, 
    every: every, 
    now: $foreign.now
};
