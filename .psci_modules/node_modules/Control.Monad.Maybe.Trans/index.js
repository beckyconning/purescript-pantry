
/**
 *  | This module defines the `MaybeT` monad transformer.
 */
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Monad = require("Control.Monad");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");

/**
 *  | The `MaybeT` monad transformer.
 *  |
 *  | This monad transformer extends the base monad, supporting failure and alternation via
 *  | the `MonadPlus` type class.
 */
var MaybeT = function (x) {
    return x;
};

/**
 *  | Run a computation in the `MaybeT` monad.
 */
var runMaybeT = function (_321) {
    return _321;
};
var monadTransMaybeT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_1) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(MaybeT)(Prelude.liftM1(__dict_Monad_1)(Data_Maybe.Just.create));
});

/**
 *  | Change the result type of a `MaybeT` monad action.
 */
var mapMaybeT = function (f) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(MaybeT)(Prelude["<<<"](Prelude.semigroupoidFn)(f)(runMaybeT));
};
var liftPassMaybe = function (__dict_Monad_7) {
    return function (pass) {
        return mapMaybeT(function (m) {
            return pass(Prelude.bind(__dict_Monad_7["__superclass_Prelude.Bind_1"]())(m)(function (_43) {
                return Prelude["return"](__dict_Monad_7["__superclass_Prelude.Applicative_0"]())((function () {
                    if (_43 instanceof Data_Maybe.Nothing) {
                        return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Prelude.id(Prelude.categoryFn));
                    };
                    if (_43 instanceof Data_Maybe.Just) {
                        return new Data_Tuple.Tuple(new Data_Maybe.Just(_43.value0.value0), _43.value0.value1);
                    };
                    throw new Error("Failed pattern match at bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs line 87, column 1 - line 88, column 1: " + [ _43.constructor.name ]);
                })());
            }));
        });
    };
};
var liftListenMaybe = function (__dict_Monad_8) {
    return function (listen) {
        return mapMaybeT(function (m) {
            return Prelude.bind(__dict_Monad_8["__superclass_Prelude.Bind_1"]())(listen(m))(function (_42) {
                return Prelude["return"](__dict_Monad_8["__superclass_Prelude.Applicative_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(function (r) {
                    return new Data_Tuple.Tuple(r, _42.value1);
                })(_42.value0));
            });
        });
    };
};
var liftCatchMaybe = function ($$catch) {
    return function (m) {
        return function (h) {
            return MaybeT($$catch(runMaybeT(m))(Prelude["<<<"](Prelude.semigroupoidFn)(runMaybeT)(h)));
        };
    };
};
var liftCallCCMaybe = function (callCC) {
    return function (f) {
        return MaybeT(callCC(function (c) {
            return runMaybeT(f(function (a) {
                return MaybeT(c(new Data_Maybe.Just(a)));
            }));
        }));
    };
};
var monadMaybeT = function (__dict_Monad_4) {
    return new Prelude.Monad(function () {
        return applicativeMaybeT(__dict_Monad_4);
    }, function () {
        return bindMaybeT(__dict_Monad_4);
    });
};
var functorMaybeT = function (__dict_Monad_9) {
    return new Prelude.Functor(Prelude.liftA1(applicativeMaybeT(__dict_Monad_9)));
};
var bindMaybeT = function (__dict_Monad_10) {
    return new Prelude.Bind(function () {
        return applyMaybeT(__dict_Monad_10);
    }, function (x) {
        return function (f) {
            return MaybeT(Prelude.bind(__dict_Monad_10["__superclass_Prelude.Bind_1"]())(runMaybeT(x))(function (_39) {
                if (_39 instanceof Data_Maybe.Nothing) {
                    return Prelude["return"](__dict_Monad_10["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Nothing.value);
                };
                if (_39 instanceof Data_Maybe.Just) {
                    return runMaybeT(f(_39.value0));
                };
                throw new Error("Failed pattern match: " + [ _39.constructor.name ]);
            }));
        };
    });
};
var applyMaybeT = function (__dict_Monad_11) {
    return new Prelude.Apply(function () {
        return functorMaybeT(__dict_Monad_11);
    }, Prelude.ap(monadMaybeT(__dict_Monad_11)));
};
var applicativeMaybeT = function (__dict_Monad_12) {
    return new Prelude.Applicative(function () {
        return applyMaybeT(__dict_Monad_12);
    }, Prelude["<<<"](Prelude.semigroupoidFn)(MaybeT)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.pure(__dict_Monad_12["__superclass_Prelude.Applicative_0"]()))(Data_Maybe.Just.create)));
};
var monadEffMaybe = function (__dict_Monad_5) {
    return function (__dict_MonadEff_6) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadMaybeT(__dict_Monad_5);
        }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransMaybeT)(__dict_Monad_5))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_6)));
    };
};
var monadRecMaybeT = function (__dict_MonadRec_2) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadMaybeT(__dict_MonadRec_2["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(MaybeT)(Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_2)(function (a) {
            return Prelude.bind((__dict_MonadRec_2["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runMaybeT(f(a)))(function (_41) {
                return Prelude["return"]((__dict_MonadRec_2["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                    if (_41 instanceof Data_Maybe.Nothing) {
                        return new Data_Either.Right(Data_Maybe.Nothing.value);
                    };
                    if (_41 instanceof Data_Maybe.Just && _41.value0 instanceof Data_Either.Left) {
                        return new Data_Either.Left(_41.value0.value0);
                    };
                    if (_41 instanceof Data_Maybe.Just && _41.value0 instanceof Data_Either.Right) {
                        return new Data_Either.Right(new Data_Maybe.Just(_41.value0.value0));
                    };
                    throw new Error("Failed pattern match at bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs line 68, column 1 - line 76, column 1: " + [ _41.constructor.name ]);
                })());
            });
        }));
    });
};
var altMaybeT = function (__dict_Monad_14) {
    return new Control_Alt.Alt(function () {
        return functorMaybeT(__dict_Monad_14);
    }, function (m1) {
        return function (m2) {
            return Prelude.bind(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(runMaybeT(m1))(function (_40) {
                if (_40 instanceof Data_Maybe.Nothing) {
                    return runMaybeT(m2);
                };
                return Prelude["return"](__dict_Monad_14["__superclass_Prelude.Applicative_0"]())(_40);
            });
        };
    });
};
var plusMaybeT = function (__dict_Monad_0) {
    return new Control_Plus.Plus(function () {
        return altMaybeT(__dict_Monad_0);
    }, Prelude.pure(__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Nothing.value));
};
var alternativeMaybeT = function (__dict_Monad_13) {
    return new Control_Alternative.Alternative(function () {
        return plusMaybeT(__dict_Monad_13);
    }, function () {
        return applicativeMaybeT(__dict_Monad_13);
    });
};
var monadPlusMaybeT = function (__dict_Monad_3) {
    return new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybeT(__dict_Monad_3);
    }, function () {
        return monadMaybeT(__dict_Monad_3);
    });
};
module.exports = {
    MaybeT: MaybeT, 
    liftCallCCMaybe: liftCallCCMaybe, 
    liftPassMaybe: liftPassMaybe, 
    liftListenMaybe: liftListenMaybe, 
    liftCatchMaybe: liftCatchMaybe, 
    mapMaybeT: mapMaybeT, 
    runMaybeT: runMaybeT, 
    functorMaybeT: functorMaybeT, 
    applyMaybeT: applyMaybeT, 
    applicativeMaybeT: applicativeMaybeT, 
    bindMaybeT: bindMaybeT, 
    monadMaybeT: monadMaybeT, 
    monadTransMaybeT: monadTransMaybeT, 
    altMaybeT: altMaybeT, 
    plusMaybeT: plusMaybeT, 
    alternativeMaybeT: alternativeMaybeT, 
    monadPlusMaybeT: monadPlusMaybeT, 
    monadRecMaybeT: monadRecMaybeT, 
    monadEffMaybe: monadEffMaybe
};
