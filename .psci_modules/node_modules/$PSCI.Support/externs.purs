module $PSCI.Support (Eval, eval) where
import Control.Monad.Eff.Console ()
import Prelude ()
import Control.Monad.Eff.Unsafe ()
import $PSCI.Support ()
import Prim ()
import Prelude ()
import Control.Monad.Eff ()
import Control.Monad.Eff.Console ()
import Control.Monad.Eff.Unsafe ()
class Eval a where
  eval :: a -> Control.Monad.Eff.Eff (console :: Control.Monad.Eff.Console.CONSOLE) Prelude.Unit
foreign import instance evalShow :: (Prelude.Show a) => $PSCI.Support.Eval a
foreign import instance evalEff :: ($PSCI.Support.Eval a) => $PSCI.Support.Eval (Control.Monad.Eff.Eff eff a)